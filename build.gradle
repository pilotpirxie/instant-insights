plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id "org.flywaydb.flyway" version "9.22.0"
}

group = 'com.instantinsights'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.4'
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.1.4'
    implementation 'org.springframework.boot:spring-boot-starter-websocket:3.1.4'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.4'
    implementation 'org.flywaydb:flyway-core:9.22.0'
    implementation 'org.springframework.boot:spring-boot-starter-mail:3.1.4'
    implementation 'dev.samstevens.totp:totp:1.7.1'
//    implementation 'org.springframework.boot:spring-boot-starter-security:3.1.4'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

tasks.named('test') {
    useJUnitPlatform()
}

ext.flywayProps = new Properties()
flywayProps.load(new FileInputStream(this.projectDir.absolutePath + "/src/main/resources/application.properties"))

flyway {
    url = flywayProps.getProperty("spring.datasource.url")
    user = flywayProps.getProperty("spring.datasource.username")
    password = flywayProps.getProperty("spring.datasource.password")
}
